install.packages("devtools")
install.packages("tidyverse")
devtools::install_github("data-steve/blogtools")
devtools::install_github("data-steve/googleformr")
blogtools::new_post("Global Temp: Raw and Adjusted HadCRU Sea-Surface Temps")
had_m_avg <- readLines("http://hadobs.metoffice.com/hadsst3/data/HadSST.3.1.1.0/diagnostics/HadSST.3.1.1.0_monthly_globe_ts.txt")
pacman::p_load(tidyverse, curl)
home <- getwd()
temp <- tempfile()
url <- "http://hadobs.metoffice.com/hadsst3/data/HadSST.3.1.1.0/ascii/HadSST.3.1.1.0.unadjusted.zip"
curl_download(url,temp)
data <- readLines(unz(temp, "HadSST.3.1.1.0.unadjusted.txt"))
unlink(temp)
data[1:2]
# meta-data pattern defining when each new matrix begin
ii <- grepl("\\d+\\s+\\d{4}\\s+\\d+\\s+Rows", data)
counter <- 0
index <- rep(NA,length(ii))
for (j in 1:length(data)){
if(ii[j]){
counter=counter+1
index[j]=counter
} else {
index[j] = counter
} }
dat_list <- split(data,index)
dat_mat_measures <- lapply(dat_list, function(x) {
meta <- x[1]
yr <- regmatches(meta,regexec("\\d{4}",meta))[[1]]
mo <- regmatches(meta,regexec("\\d{1,2}",meta))[[1]][1]
mo <- ifelse(as.integer(mo)<10,paste0("0",mo),mo)
mx <- x[2:37]
mx <- sapply(mx, function(y) {
m <- as.numeric(strsplit(trimws(y),"\\s+")[[1]])
ifelse(m==-99.99, NA,m) })
m <- matrix(mx,36,72)
colnames(m) <- c(paste0(seq(175,5,by=-5),"W"),0,paste0(seq(5,180, by=5),"E"))
rownames(m) <- c(paste0(seq(85,5,by=-5),"S"),"Eq",paste0(seq(5,90, by=5),"N"))
stats::setNames(list(paste0(yr,"/",mo),mean(m,na.rm = T),m),c("ym","mean", "raw"))
})
dat_mat_measures <- dat_mat_measures %>% transpose()
ym_mean <- data_frame(ym = unlist(dat_mat_measures$ym),
mean = as.numeric( unlist(dat_mat_measures$mean) ) )
had_m_avg2 <- lapply(had_m_avg, function(x) {#browser()
v <-  strsplit(x,"\\s+")[[1]]
data_frame(ym=v[1], avg=v[2])
}) %>% bind_rows()
raw_adj <- ym_mean %>%
left_join(had_m_avg2, by="ym") %>%
setNames(c("ym", "HadRaw", "HadAdj"))
raw_adj %>%
mutate(ym=factor(ym,levels=ym, ordered=T)) %>%
gather(type, temp, -ym) %>%
mutate(temp=as.numeric(temp)) %>%
ggplot() + geom_point( aes(x=ym, y=temp,  color=factor(type))) +
ylab("Anamolies from 1960-1990 avg") + xlab("Date (y/m)") +
ggtitle("Global Temperature  Year-Month") +
scale_x_discrete(breaks = ticks) +
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
ticks <- ym_mean$ym[seq(12,2000,by=96)]
raw_adj %>%
mutate(ym=factor(ym,levels=ym, ordered=T)) %>%
gather(type, temp, -ym) %>%
mutate(temp=as.numeric(temp)) %>%
ggplot() + geom_point( aes(x=ym, y=temp,  color=factor(type))) +
ylab("Anamolies from 1960-1990 avg") + xlab("Date (y/m)") +
ggtitle("Global Temperature  Year-Month") +
scale_x_discrete(breaks = ticks) +
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
raw_adj %>%
mutate(ym=factor(ym,levels=ym, ordered=T)) %>%
gather(source, temp, -ym) %>%
mutate(temp=as.numeric(temp),
source=factor(source)) %>%
ggplot() + geom_point( aes(x=ym, y=temp,  color=source)) +
ylab("Anamolies from 1960-1990 avg\nRaw v. Adj HadSST3") + xlab("Date (y/m)") +
ggtitle("Global Sea-Surface Temperature Trends: Raw vs. Adjusted HadSST3") +
scale_x_discrete(breaks = ticks) +
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1))
raw_adj %>%
mutate(ym=factor(ym,levels=ym, ordered=T)) %>%
gather(source, temp, -ym) %>%
mutate(temp=as.numeric(temp),
source=factor(source)) %>%
ggplot() + geom_point( aes(x=ym, y=temp,  color=source)) +
ylab("Anamolies from 1960-90 avg.\n(Raw v. Adj HadSST3)") + xlab("Date (y/m)") +
ggtitle("Global Sea-Surface Temperature Trends: Raw vs. Adjusted HadSST3") +
scale_x_discrete(breaks = ticks) +
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggsave("/images/had_raw_adj_readings.png")
getwd()
raw_adj %>%
mutate(ym=factor(ym,levels=ym, ordered=T)) %>%
gather(source, temp, -ym) %>%
mutate(temp=as.numeric(temp),
source=factor(source)) %>%
ggplot() + geom_point( aes(x=ym, y=temp,  color=source)) +
ylab("Anamolies from 1960-90 avg.\n(Raw v. Adj HadSST3)") + xlab("Date (y/m)") +
ggtitle("Global Sea-Surface Temperature Trends: Raw vs. Adjusted HadSST3") +
scale_x_discrete(breaks = ticks) +
theme_bw() + theme(axis.text.x = element_text(angle = 45, hjust = 1))+
ggsave(file.path(getwd(),"/images/had_raw_adj_readings.png"))
had_m_avg2 <- lapply(had_m_avg, function(x) {#browser()
v <-  strsplit(x,"\\s+")[[1]]
data_frame(ym=v[1], avg=as.numeric(v[2]))
}) %>% bind_rows()
raw_adj <- ym_mean %>%
left_join(had_m_avg2, by="ym") %>%
setNames(c("ym", "HadRaw", "HadAdj"))
raw_adj %>% summarize(max(HadAdj-HadRaw))
